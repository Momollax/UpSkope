name: Build UpSkope

# <-- AJOUT : droits pour publier une Release
permissions:
  contents: write

on:
  push:
    branches: ["**"]
    tags: ["v*"]           # ex: v1.0.0
  pull_request:
  # (optionnel) déclencheur manuel pour publier sans pousser un tag local
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag à publier (ex: v1.0.0)"
        required: false

jobs:
  build:
    runs-on: windows-2022

    steps:
    - name: Checkout du dépôt
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2

    - name: Setup NuGet
      uses: NuGet/setup-nuget@v2

    - name: Cache NuGet
      uses: actions/cache@v4
      with:
        path: |
          ~\AppData\Local\NuGet\Cache
          ~\AppData\Local\NuGet\v3-cache
          ~\.nuget\packages
        key: nuget-${{ runner.os }}-${{ hashFiles('**/packages.config', '**/*.csproj', '**/*.sln') }}
        restore-keys: nuget-${{ runner.os }}-

    - name: Restore NuGet packages
      run: nuget restore .\UpSkope.sln

    # (à supprimer si tu corrige le PostBuild d'IPCProxy)
    - name: Préparer le dossier attendu par le post-build
      run: New-Item -ItemType Directory -Path "IPCProxy\Upskope\resources" -Force

    - name: Build IPCProxy
      run: msbuild .\IPCProxy\IPCProxy.vcxproj /m /p:Configuration=Release /p:Platform=Win32

    - name: Build CustomAction
      run: msbuild .\CustomAction\CustomAction.vcxproj /m /p:Configuration=Release /p:Platform=Win32

    - name: Build UpSkope
      run: msbuild .\UpSkope\UpSkope.csproj /m /p:Configuration=Release /p:Platform=AnyCPU

    # Artifacts CI (onglet Actions)
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: UpSkope-Release
        path: |
          UpSkope\bin\Release\**\UpSkope.exe
          IPCProxy\Win32\Release\**\*.dll
          CustomAction\Win32\Release\**\*.dll

    # ---------- Publication GitHub Releases (seulement quand tag ou dispatch) ----------
    - name: Rassembler les fichiers pour la Release
      if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
      shell: pwsh
      run: |
        $tag = "${{ github.ref_name }}"
        if ("${{ github.event_name }}" -eq "workflow_dispatch" -and "${{ inputs.tag }}") { $tag = "${{ inputs.tag }}" }
        New-Item -ItemType Directory -Path dist -Force | Out-Null
        Copy-Item UpSkope\bin\Release\UpSkope.exe dist\
        Copy-Item IPCProxy\Win32\Release\*.dll dist\
        Copy-Item CustomAction\Win32\Release\*.dll dist\
        Compress-Archive -Path dist\* -DestinationPath ("dist\UpSkope-" + $tag + ".zip") -Force

    - name: Create GitHub Release & upload assets
      if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name || inputs.tag }}
        name: UpSkope ${{ github.ref_name || inputs.tag }}
        # IMPORTANT: chemins avec des slashs /
        files: |
          dist/UpSkope-${{ github.ref_name || inputs.tag }}.zip
          dist/UpSkope.exe
          dist/*.dll
